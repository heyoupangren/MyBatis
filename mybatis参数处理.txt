单个参数：mybatis不会做特殊处理
    #{参数名}：取出参数值


多个参数：mybatis会做特殊处理
    多个参数会被封装成一个map
        key:param1 ... paramN,或者参数的索引也可以
        value：传入的参数值
        #{}就是从map中获取指定的key的值

命名参数：明确指定封装参数是map的key；@Param("id")
     多个参数会被封装成一个map
            key:使用@Param注解指定的值
            value：传入的参数值
            #{指定的key}取出对应的参数值

POJO：
如果多个参数正好是我们业务逻辑的数据模型，我们就可以直接传入pojo；
    #{属性名}：取出传入的pojo的属性值

Map：
如果多个参数不是业务模型中的数据，没有对应的pojo，不经常使用，为了方便，我们也可以传入map
    #{key}：取出map中对应的值

TO:
如果多个参数不是业务模型中的数据，但是经常要使用，推荐来编写一个TO(Transfer Object)数据传输对象
Page{
    int index；
    int size；
}

===============================思考===================================
public Employee getEmp(@Param("id") Integer id,String lastName);
    取值：id ==>#{id/param1}  lastName ==>#{param2}

public Employee getEmp(Integer id,@Param("emp") Employee employee);
    取值：id ==>#{param1} lastName ==>#{param2.lastName/emp.lastName}
##特别注意：如果是Collection（List、Set）类型或者是数组，
            也会特殊处理。也是把传入的list或者数组封装在map中。
                key：Collection（collection），如果是List还可以使用这个key（list）
                    数组（array）
public Employee getEmpById(List<Integer> lists);
    取出第一个id的值：#{last[0]}


===========================参数值的获取================================
#{}:可以获取map中的值或者pojo对象属性的值；
${}:可以获取map中的值或者pojo对象属性的值；
select * from table_employee where id=${id} and last_name=#{lastName}
Preparing:select * from table_employee where id =2 and last_name=?

    区别：
        #{}：是以预编译的形式，将产生设置到sql语句中；PreparedStatement；防止sql注入
        ${}:取出的值直接拼装在sql语句中；会有安全问题；
        大多情况下，我们取参数的值都应该去使用#{}

        原生jdbc不支持占位符的地方我们就可以使用${}进行取值
        比如分表、排序，按照年份分表拆分
            select * from ${tableName} where xxx;
            select * from table_employee order by ${last_name} ${order}

#{}：更丰富的用法：
    规定参数的一些规则；
    JavaType,jdbcType,mode(存储过程),numericScale,
    resultMap,typeHandler,jdbcTypeName,expression(未来准备支持的功能)

    jdbcType通常需要在某种特定的条件下被设置：
        在我们数据为null的时候，有些数据库可能不能识别mybatis对null 的默认处理。比如Oracle（报错）;

        JdbcType OTHER:无效的类型；因为mybatis对所有的null映射的都是原生jdbc的OTHER类型，Oracle不能正确处理；

        由于全局配置中JdbcTypeForNull=OTHER，Oracle不支持；两种办法：
        1.#{email,jdbcType=null};
        2.JdbcTypeForNull=NULL;
            <setting name="JdbcTypeForNull" value="NULL"/>