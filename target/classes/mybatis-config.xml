<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!--
        1.mybatis可以使用properties来引入外部properties配置文件的内容
        resource：引入类路径下的资源
        url：引入网络路径或者磁盘路径下的资源
    -->
    <properties resource="db.properties"></properties>

    <!--
        2.settings包含很多重要的设置项
            setting：用来设置每一个设置项
            name：设置项名称
            value：设置项取值
    -->
    <settings>
        <!--是否开启自动驼峰命名规则-->
        <setting name="mapUnderscoreToCamelCase" value="true"/>
        <!--设置jdbcTypeForNull 的类型为NULL-->
        <setting name="jdbcTypeForNull" value="NULL"/>
        <!--显示的指定每个我们需要更改的配置的值，即使他是默认的。防止版本更新带来的问题-->
        <setting name="lazyLoadingEnabled" value="true "/>
        <setting name="aggressiveLazyLoading" value="false"/>
    </settings>

    <!--
        3.typeAliases:别名处理器：可以为我们的java类型起别名
    -->
    <typeAliases>
        <!--
            typeAlias:为某个java类型起别名
            type：指定要起别名的类型的全类名；默认别名就是类名小写；employee）（别名不区分大小写）
            alias：指定新的别名
        -->
        <typeAlias type="com.cwh.mybatis.beans.Employee"></typeAlias>
        <!--package:为某个包下的所有类批量起别名
            name：指定包名（为当前包以及下面所有的后代包的每一个类都起一个默认别名（类名小写））
        -->
       <!-- <package name="com.cwh.mybatis.beans"></package>-->
        <!--批量起别名的情况下，使用@Alias注解为某个类型指定新的别名-->
    </typeAliases>
    <!--类型处理器（typeHandlers）-->


    <!--plugins：插件
        Executor
        ParameterHandler
        ResultSetHandler
        StatementHandler

    -->
    <!--
        4.environments:环境们，mybatis可以配置多种环境，default指定使用某种环境。可以达到快速切换环境
            environment：配置一个具体的环境信息；必须有两个标签；id代表当前环境的唯一标识
                transactionManager：事务管理器；
                    type:事务管理器的类型；jDBC（JdbcTransactionFactory）|MANAGED（ManagedTransactionFactory）
                    自定义事务管理器:实现TransactionFactory接口，type指定为全类名
                dataSource：数据源；
                    type：数据源类型；UNPOOLED（UnpooledDataSourceFactory）
                                    |POOLED（PooledDataSourceFactory）
                                    |JNDI（JndiDataSourceFactory）
                   自定义数据源：实现DataSourceFactory接口，type是全类名
    -->
    <environments default="val_mysql">
        <environment id="val_mysql">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>

    <!--
        5.databaseIdProvider:支持多数据库厂商的；
            type="DB_VENDOR":VendorDatabaseIdProvider
                作用就是得到数据库厂商的标识（驱动getDatabaseProductName()）,mybatis就能根据数据库厂商标识来执行不同的sql
                xxMapper.xml <select>标签中的databaseId="mysql"就是来配送配置的数据库厂商的别名的
    -->
    <databaseIdProvider type="DB_VENDOR">
        <!--为不同的数据库厂商起别名-->
        <property name="MySQL" value="mysql"/>
        <property name="Oracle" value="oracle"/>
        <property name="SQL Server" value="sqlserver"/>
    </databaseIdProvider>
    <!--将我们写好的SQL映射文件(EmployeeMapper.xml)添加到全局配置文件(mybatis-config.xml)中-->
   <!--6.mappers：将sql映射注册到全局配置中-->
    <mappers>
        <!--
            mapper：注册一个sql映射
                注册配置文件
                resource：引用类路径下的SQL映射文件

                url：引用网络路径或者磁盘路径下的SQL映射文件

                注册接口
                class：引用（注册）接口
                    1.有sql映射文件，映射文件名必须和接口同名，并且放在与接口同一目录下；
                    2.没有SQL映射文件，所有的SQL都是利用注解写在接口上
                 推荐：
                    比较重要的，复杂的Dao接口来用SQL的映射文件
                    不重要，简单的Dao接口为了开发快速可以使用注解；
        -->
        <mapper resource="EmployeeMapper.xml"/>

        <mapper class="com.cwh.mybatis.dao.EmployeeMapperAnnotation"/>
        <mapper resource="EmployeeMapperPlus.xml"/>
        <mapper resource="DepartmentMapper.xml"/>
        <mapper resource="EmployeeMapperDynamicSQL.xml"/>

        <!--批量导入 package xx mapper接口和 xx mapper.xml的SQL映射文件要在一个包下-->
        <!--<package name="com.cwh.mybatis.dao"/>-->
    </mappers>
</configuration>